apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply from: '../unit_test_script.gradle'
apply from: '../comm.gradle'

android {
    dexOptions {
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled true
    }
    defaultConfig {
        applicationId "com.std.framework"
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src-gen']
            aidl.srcDirs = ['src/main/java']
            res.srcDirs = ['src/main/res', 'src/main/res/resource',
                           'src/main/res/main', 'src/main/res/explore',
                           'src/main/res/call', 'src/main/res/rich',
                           'src/main/res/chunyu']
            assets.srcDirs = ['assets']
        }
    }
    // Move the build types to build-types/<type>
    // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
    // This moves them out of them default location under src/<type>/... which would
    // conflict with src/ being used by the main source set.
    // Adding new build types or product flavors should be accompanied
    // by a similar customization.
//        debug.setRoot('build-types/debug')
//        release.setRoot('build-types/release')
//    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
}


greendao {
    schemaVersion 1
    daoPackage 'table'
    targetGenDir 'src-gen'
}

dependencies {
    implementation fileTree(include: '*.jar', dir: 'libs')
    implementation project(':STDlibrary')
    implementation project(':annotation')
//    implementation project(':ffmpeg')
    annotationProcessor project(':annotation-compiler')
    implementation project(':annotation-api')
    implementation 'org.greenrobot:eventbus:3.0.0'
    //    compile 'com.facebook.fresco:fresco:0.8.1+'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation depend['rxandroid']
    implementation depend['rxjava']
    implementation depend['appcompat']
    implementation depend['recyclerview']
    implementation depend['nineoldandroids']
    implementation depend['greendao']
    implementation 'com.android.support:multidex:1.0.1'
}

task test_demo {
//    println("hello groovy "+ x)
//    readXml()
    readDependence()
}
import groovy.util.slurpersupport.GPathResult

def readXml() {
    File file = projects.project.file("src/main/AndroidManifest.xml")
    GPathResult result = new XmlSlurper().parse(file)
    def find = result.depthFirst().find {
        it['@android:process'] == ":messager"
    }
    println(find['@android:name'])
}

def readDependence() {
    project.dependencies {
        println(it)
    }
}

println 'app absolutePath :' + getProjectDir().absolutePath





